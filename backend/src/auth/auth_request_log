<ref *2> IncomingMessage {
_readableState: ReadableState {
  objectMode: false,
  highWaterMark: 16384,
  buffer: BufferList { head: null, tail: null, length: 0 },
  length: 0,
  pipes: [],
  flowing: null,
  ended: true,
  endEmitted: false,
  reading: false,
  constructed: true,
  sync: true,
  needReadable: false,
  emittedReadable: false,
  readableListening: false,
  resumeScheduled: false,
  errorEmitted: false,
  emitClose: true,
  autoDestroy: true,
  destroyed: false,
  errored: null,
  closed: false,
  closeEmitted: false,
  defaultEncoding: 'utf8',
  awaitDrainWriters: null,
  multiAwaitDrain: false,
  readingMore: true,
  dataEmitted: false,
  decoder: null,
  encoding: null,
  [Symbol(kPaused)]: null
},
_events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
_eventsCount: 1,
_maxListeners: undefined,
socket: <ref *1> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    constructed: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: true,
    destroyed: false,
    errored: null,
    closed: false,
    closeEmitted: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    dataEmitted: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  _events: [Object: null prototype] {
    end: [Array],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Array],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    buffered: [],
    bufferedIndex: 0,
    allBuffers: true,
    allNoop: true,
    pendingcb: 0,
    constructed: true,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: true,
    errored: null,
    closed: false,
    closeEmitted: false,
    [Symbol(kOnFinished)]: []
  },
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype],
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 3,
    _handle: [TCP],
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    requestTimeout: 0,
    _connectionKey: '6::::3000',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(async_id_symbol)]: 21
  },
  _server: Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype],
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 3,
    _handle: [TCP],
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    requestTimeout: 0,
    _connectionKey: '6::::3000',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(async_id_symbol)]: 21
  },
  parser: HTTPParser {
    '0': [Function: bound setRequestTimeout],
    '1': [Function: parserOnHeaders],
    '2': [Function: parserOnHeadersComplete],
    '3': [Function: parserOnBody],
    '4': [Function: parserOnMessageComplete],
    '5': [Function: bound onParserExecute],
    '6': [Function: bound onParserTimeout],
    _headers: [],
    _url: '',
    socket: [Circular *1],
    incoming: [Circular *2],
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    [Symbol(owner_symbol)]: [HTTPServerAsyncResource]
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  setEncoding: [Function: socketSetEncoding],
  _paused: false,
  _httpMessage: ServerResponse {
    _events: [Object: null prototype],
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: [Circular *1],
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: [Circular *2],
    _sent100: false,
    _expect_continue: false,
    locals: [Object: null prototype] {},
    statusCode: 200,
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype]
  },
  [Symbol(async_id_symbol)]: 148,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner_symbol)]: [Circular *1]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0,
  [Symbol(RequestTimeout)]: undefined
},
httpVersionMajor: 1,
httpVersionMinor: 1,
httpVersion: '1.1',
complete: true,
rawHeaders: [
  'Host',
  'localhost:3000',
  'User-Agent',
  'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:92.0) Gecko/20100101 Firefox/92.0',
  'Accept',
  'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
  'Accept-Language',
  'en-US,en;q=0.5',
  'Accept-Encoding',
  'gzip, deflate',
  'DNT',
  '1',
  'Connection',
  'keep-alive',
  'Cookie',
  'adminer_permanent=',
  'Upgrade-Insecure-Requests',
  '1',
  'Sec-Fetch-Dest',
  'document',
  'Sec-Fetch-Mode',
  'navigate',
  'Sec-Fetch-Site',
  'cross-site',
  'Sec-Fetch-User',
  '?1'
],
rawTrailers: [],
aborted: false,
upgrade: false,
url: '/auth?code=4a19cd76725b388bdc1b4d72afc3cab826aa5d6bb17f4ea7028dcc5dff26b2bb',
method: 'GET',
statusCode: null,
statusMessage: null,
client: <ref *1> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    constructed: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: true,
    destroyed: false,
    errored: null,
    closed: false,
    closeEmitted: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    dataEmitted: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  _events: [Object: null prototype] {
    end: [Array],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Array],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    buffered: [],
    bufferedIndex: 0,
    allBuffers: true,
    allNoop: true,
    pendingcb: 0,
    constructed: true,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: true,
    errored: null,
    closed: false,
    closeEmitted: false,
    [Symbol(kOnFinished)]: []
  },
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype],
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 3,
    _handle: [TCP],
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    requestTimeout: 0,
    _connectionKey: '6::::3000',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(async_id_symbol)]: 21
  },
  _server: Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype],
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 3,
    _handle: [TCP],
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    requestTimeout: 0,
    _connectionKey: '6::::3000',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(async_id_symbol)]: 21
  },
  parser: HTTPParser {
    '0': [Function: bound setRequestTimeout],
    '1': [Function: parserOnHeaders],
    '2': [Function: parserOnHeadersComplete],
    '3': [Function: parserOnBody],
    '4': [Function: parserOnMessageComplete],
    '5': [Function: bound onParserExecute],
    '6': [Function: bound onParserTimeout],
    _headers: [],
    _url: '',
    socket: [Circular *1],
    incoming: [Circular *2],
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    [Symbol(owner_symbol)]: [HTTPServerAsyncResource]
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  setEncoding: [Function: socketSetEncoding],
  _paused: false,
  _httpMessage: ServerResponse {
    _events: [Object: null prototype],
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: [Circular *1],
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: [Circular *2],
    _sent100: false,
    _expect_continue: false,
    locals: [Object: null prototype] {},
    statusCode: 200,
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype]
  },
  [Symbol(async_id_symbol)]: 148,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner_symbol)]: [Circular *1]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0,
  [Symbol(RequestTimeout)]: undefined
},
_consuming: false,
_dumped: false,
next: [Function: next],
baseUrl: '',
originalUrl: '/auth?code=4a19cd76725b388bdc1b4d72afc3cab826aa5d6bb17f4ea7028dcc5dff26b2bb',
_parsedUrl: Url {
  protocol: null,
  slashes: null,
  auth: null,
  host: null,
  port: null,
  hostname: null,
  hash: null,
  search: '?code=4a19cd76725b388bdc1b4d72afc3cab826aa5d6bb17f4ea7028dcc5dff26b2bb',
  query: 'code=4a19cd76725b388bdc1b4d72afc3cab826aa5d6bb17f4ea7028dcc5dff26b2bb',
  pathname: '/auth',
  path: '/auth?code=4a19cd76725b388bdc1b4d72afc3cab826aa5d6bb17f4ea7028dcc5dff26b2bb',
  href: '/auth?code=4a19cd76725b388bdc1b4d72afc3cab826aa5d6bb17f4ea7028dcc5dff26b2bb',
  _raw: '/auth?code=4a19cd76725b388bdc1b4d72afc3cab826aa5d6bb17f4ea7028dcc5dff26b2bb'
},
params: {},
query: {
  code: '4a19cd76725b388bdc1b4d72afc3cab826aa5d6bb17f4ea7028dcc5dff26b2bb'
},
res: <ref *3> ServerResponse {
  _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
  _eventsCount: 1,
  _maxListeners: undefined,
  outputData: [],
  outputSize: 0,
  writable: true,
  destroyed: false,
  _last: false,
  chunkedEncoding: false,
  shouldKeepAlive: true,
  _defaultKeepAlive: true,
  useChunkedEncodingByDefault: true,
  sendDate: true,
  _removedConnection: false,
  _removedContLen: false,
  _removedTE: false,
  _contentLength: null,
  _hasBody: true,
  _trailer: '',
  finished: false,
  _headerSent: false,
  _closed: false,
  socket: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: [ReadableState],
    _events: [Object: null prototype],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    parser: [HTTPParser],
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [Circular *3],
    [Symbol(async_id_symbol)]: 148,
    [Symbol(kHandle)]: [TCP],
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(RequestTimeout)]: undefined
  },
  _header: null,
  _keepAliveTimeout: 5000,
  _onPendingData: [Function: bound updateOutgoingData],
  req: [Circular *2],
  _sent100: false,
  _expect_continue: false,
  locals: [Object: null prototype] {},
  statusCode: 200,
  [Symbol(kCapture)]: false,
  [Symbol(kNeedDrain)]: false,
  [Symbol(corked)]: 0,
  [Symbol(kOutHeaders)]: [Object: null prototype] {
    'x-powered-by': [Array],
    vary: [Array],
    'access-control-allow-credentials': [Array]
  }
},
body: {},
route: Route { path: '/auth', stack: [ [Layer] ], methods: { get: true } },
[Symbol(kCapture)]: false,
[Symbol(kHeaders)]: {
  host: 'localhost:3000',
  'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:92.0) Gecko/20100101 Firefox/92.0',
  accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
  'accept-language': 'en-US,en;q=0.5',
  'accept-encoding': 'gzip, deflate',
  dnt: '1',
  connection: 'keep-alive',
  cookie: 'adminer_permanent=',
  'upgrade-insecure-requests': '1',
  'sec-fetch-dest': 'document',
  'sec-fetch-mode': 'navigate',
  'sec-fetch-site': 'cross-site',
  'sec-fetch-user': '?1'
},
[Symbol(kHeadersCount)]: 26,
[Symbol(kTrailers)]: null,
[Symbol(kTrailersCount)]: 0,
[Symbol(RequestTimeout)]: undefined
backend_1   | }