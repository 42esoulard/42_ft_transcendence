{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "string" } }
            }
          }
        }
      }
    },
    "/favicon.ico": {
      "get": {
        "operationId": "create",
        "parameters": [],
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/users": {
      "get": {
        "operationId": "getUsers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/User" }
                }
              }
            }
          }
        },
        "tags": ["User"]
      },
      "post": {
        "operationId": "saveUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateUserDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          }
        },
        "tags": ["User"]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "getUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "The user has been found in database",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "400": { "description": "Invalid ID supplied" },
          "404": { "description": "User not found" }
        },
        "tags": ["User"]
      }
    },
    "/users/name/{username}": {
      "get": {
        "operationId": "getUserByUsername",
        "parameters": [
          {
            "name": "username",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "The user has been found in database",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "400": { "description": "Invalid username supplied" },
          "404": { "description": "User not found" }
        },
        "tags": ["User"]
      }
    },
    "/users/upload": {
      "post": {
        "operationId": "uploadFile",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["User"],
        "security": [{ "cookie": [] }]
      }
    },
    "/users/avatars/{imgpath}": {
      "get": {
        "operationId": "getAvatar",
        "parameters": [
          {
            "name": "imgpath",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["User"],
        "security": [{ "cookie": [] }]
      }
    },
    "/messages": {
      "get": {
        "operationId": "getMessages",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Message" }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "saveMessage",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateMessageDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Message" }
              }
            }
          }
        }
      }
    },
    "/messages/{id}": {
      "get": {
        "operationId": "getMessageById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "The message has been found in database",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Message" }
              }
            }
          },
          "400": { "description": "Invalid ID supplied" },
          "404": { "description": "Message not found" }
        }
      }
    },
    "/messages/in/{channel_id}": {
      "get": {
        "operationId": "getChannelMessages",
        "parameters": [
          {
            "name": "channel_id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Message" }
                }
              }
            }
          }
        }
      }
    },
    "/channels": {
      "get": {
        "operationId": "getChannels",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Channel" }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "saveChannel",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateChannelDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Channel" }
              }
            }
          }
        }
      }
    },
    "/channels/{id}": {
      "get": {
        "operationId": "getChannelById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "The channel has been found in database",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Channel" }
              }
            }
          },
          "400": { "description": "Invalid ID supplied" },
          "404": { "description": "Channel not found" }
        }
      }
    },
    "/channels/name/{name}": {
      "get": {
        "operationId": "getChannelByName",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "The channel has been found in database",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Channel" }
              }
            }
          },
          "400": { "description": "Invalid ID supplied" },
          "404": { "description": "Channel not found" }
        }
      }
    },
    "/channelMembers": {
      "get": {
        "operationId": "getChannelMembers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The channel-members have been found in database",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ChannelMember" }
              }
            }
          },
          "400": { "description": "Invalid ID supplied" },
          "404": { "description": "Channel-members not found" }
        }
      },
      "post": {
        "operationId": "saveChannelMember",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChannelMemberDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ChannelMember" }
              }
            }
          }
        }
      }
    },
    "/channelMembers/by_member/{id}": {
      "get": {
        "operationId": "getChannelsByMember",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "The member's channels have been found in database",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ChannelMember" }
              }
            }
          },
          "400": { "description": "Invalid ID supplied" },
          "404": { "description": "Channels not found" }
        }
      }
    },
    "/channelMembers/by_channel/{id}": {
      "get": {
        "operationId": "getMembersByChannel",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "The channel members have been found in database",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ChannelMember" }
              }
            }
          },
          "400": { "description": "Invalid ID supplied" },
          "404": { "description": "Channel not found" }
        }
      }
    },
    "/channelMembers/is_member/{channel_id}/{member_id}": {
      "get": {
        "operationId": "getChannelMember",
        "parameters": [
          {
            "name": "channel_id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "member_id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "The channel member has been found in database",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ChannelMember" }
              }
            }
          },
          "400": { "description": "Invalid ID supplied" },
          "404": { "description": "Channel not found" }
        }
      }
    },
    "/auth/42/login": {
      "get": {
        "operationId": "login",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Auth"],
        "security": [{ "oauth2": ["users"] }]
      }
    },
    "/auth/fake-login": {
      "post": {
        "operationId": "fakeLogin",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/auth/refreshtoken": {
      "get": {
        "operationId": "refreshToken",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Auth"],
        "security": [{ "cookie": [] }]
      }
    },
    "/auth/status": {
      "get": {
        "operationId": "status",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          }
        },
        "tags": ["Auth"],
        "security": [{ "cookie": [] }]
      }
    },
    "/auth/profile": {
      "get": {
        "operationId": "profile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          }
        },
        "tags": ["Auth"],
        "security": [{ "cookie": [] }]
      }
    },
    "/auth/logout": {
      "get": {
        "operationId": "logout",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Auth"],
        "security": [{ "cookie": [] }]
      }
    },
    "/auth": {
      "get": {
        "operationId": "findAll",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/auth/2fa/generate": {
      "get": {
        "operationId": "register",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "tags": ["Auth"],
        "security": [{ "cookie": [] }]
      }
    },
    "/auth/2fa/turn-on": {
      "post": {
        "operationId": "turnOnTwoFactorAuthentication",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TwoFactorDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Auth"],
        "security": [{ "cookie": [] }]
      }
    },
    "/auth/2fa/authenticate": {
      "post": {
        "operationId": "authenticate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TwoFactorDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          }
        },
        "tags": ["Auth"],
        "security": [{ "cookie": [] }]
      }
    }
  },
  "info": {
    "title": "ft_transcendence API",
    "description": "Because we will nail it !",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [{ "url": "http://localhost:3000" }],
  "components": {
    "securitySchemes": {
      "oauth2": { "type": "oauth2", "flows": {} },
      "cookie": { "type": "apiKey", "in": "cookie", "name": "tokens" }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "username": { "type": "string" },
          "forty_two_login": { "type": "string" },
          "avatar": { "type": "string" },
          "two_fa_secret": { "type": "string" },
          "two_fa_enabled": { "type": "boolean" },
          "refresh_token": { "type": "string" },
          "expiry_date": { "format": "date-time", "type": "string" }
        },
        "required": [
          "id",
          "username",
          "forty_two_login",
          "avatar",
          "two_fa_secret",
          "two_fa_enabled",
          "refresh_token",
          "expiry_date"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "forty_two_login": { "type": "string" },
          "avatar": { "type": "string" }
        },
        "required": ["username", "forty_two_login"]
      },
      "Message": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "channel_id": { "type": "number" },
          "author_id": { "type": "number" },
          "content": { "type": "string" }
        },
        "required": ["id", "channel_id", "author_id", "content"]
      },
      "CreateMessageDto": {
        "type": "object",
        "properties": {
          "channel_id": { "type": "number" },
          "author_id": { "type": "number" },
          "content": { "type": "string" }
        },
        "required": ["channel_id", "author_id", "content"]
      },
      "Channel": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "name": { "type": "string" },
          "type": { "type": "string" },
          "salt": { "type": "string" },
          "password": { "type": "string" },
          "owner_id": { "type": "number" }
        },
        "required": ["id", "name", "type", "salt", "password", "owner_id"]
      },
      "CreateChannelDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "owner_id": { "type": "number" },
          "password": { "type": "string" },
          "type": { "type": "string" }
        },
        "required": ["name", "owner_id", "password", "type"]
      },
      "ChannelMember": {
        "type": "object",
        "properties": {
          "channel_id": { "type": "number" },
          "user_id": { "type": "number" },
          "is_admin": { "type": "boolean" }
        },
        "required": ["channel_id", "user_id", "is_admin"]
      },
      "CreateChannelMemberDto": {
        "type": "object",
        "properties": {
          "channel_id": { "type": "number" },
          "user_id": { "type": "number" },
          "is_admin": { "type": "boolean" }
        },
        "required": ["channel_id", "user_id", "is_admin"]
      },
      "TwoFactorDto": {
        "type": "object",
        "properties": { "code": { "type": "string" } },
        "required": ["code"]
      }
    }
  }
}
